{"version":3,"sources":["scripts/main.js"],"names":["cellValue","tr","index","children","innerText","textContent","salaryCleaner","string","slice","split","join","comparer","a","b","actualCell","nextCell","actualCellCopy","nextCellCopy","includes","localeCompare","document","querySelectorAll","forEach","th","addEventListener","table","tbody","closest","querySelector","Array","from","sort","parentNode","indexOf","appendChild"],"mappings":";AAAA,aAEA,IAAMA,EAAY,SAASC,EAAIC,GACtBD,OAAAA,EAAGE,SAASD,GAAOE,WAAaH,EAAGE,SAASD,GAAOG,aAGtDC,EAAgB,SAASC,GACtBA,OAAAA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAGnCC,EAAW,SAAST,GACjB,OAAA,SAASU,EAAGC,GACT,OAASC,EAWfd,EAAUa,EAAGX,GAXca,EAWNf,EAAUY,EAAGV,GAV9Bc,EAAiBF,EACjBG,EAAeF,GAEfD,EAAWI,SAAS,MAAQH,EAASG,SAAS,QAChDF,EAAiBV,EAAcQ,GAC/BG,EAAeX,EAAcS,IAGxBE,EAAeD,GACnBC,EAAaE,cAAcH,GAVxB,IAASF,EAAYC,EACvBC,EACAC,IAaVG,SACGC,iBAAiB,MACjBC,QAAQ,SAAAC,GAAMA,OAAAA,EAAGC,iBAAiB,QAAS,WACpCC,IACAC,EADQH,EAAGI,QAAQ,SACLC,cAAc,SAElCC,MAAMC,KAAKJ,EAAML,iBAAiB,OAC/BU,KAAKpB,EAASkB,MAAMC,KAAKP,EAAGS,WAAW7B,UACrC8B,QAAQV,KACVD,QAAQ,SAAArB,GAAMyB,OAAAA,EAAMQ,YAAYjC","file":"main.213bae37.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cellValue = function(tr, index) {\n  return tr.children[index].innerText || tr.children[index].textContent;\n};\n\nconst salaryCleaner = function(string) {\n  return string.slice(1).split(',').join('');\n};\n\nconst comparer = function(index) {\n  return function(a, b) {\n    return (function(actualCell, nextCell) {\n      let actualCellCopy = actualCell;\n      let nextCellCopy = nextCell;\n\n      if (actualCell.includes('$') || nextCell.includes('$')) {\n        actualCellCopy = salaryCleaner(actualCell);\n        nextCellCopy = salaryCleaner(nextCell);\n      }\n\n      return nextCellCopy - actualCellCopy\n      || nextCellCopy.localeCompare(actualCellCopy);\n    }(cellValue(b, index), cellValue(a, index)));\n  };\n};\n\ndocument\n  .querySelectorAll('th')\n  .forEach(th => th.addEventListener('click', () => {\n    const table = th.closest('table');\n    const tbody = table.querySelector('tbody');\n\n    Array.from(tbody.querySelectorAll('tr'))\n      .sort(comparer(Array.from(th.parentNode.children)\n        .indexOf(th)))\n      .forEach(tr => tbody.appendChild(tr));\n  }));\n"]}